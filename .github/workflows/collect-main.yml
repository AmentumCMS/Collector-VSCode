name: VSCode Main Collection
on:
  push:
    branches:
      - main
  release:
    types: [edited, released]
  schedule:
    - cron: "0 0 1 * *" # Update on First of month at midnight UTC
  workflow_dispatch:

jobs:
  Date:
    runs-on: ubuntu-24.04
    outputs:
      Date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "Setting Date"
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\nWrote to file:\n$GITHUB_OUTPUT\n"
          echo "Values:"
          cat $GITHUB_OUTPUT

  Skopeo:
    needs: [Date]
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install Skopeo
        run: |
          sudo apt-get update -y
          sudo apt-get install -y skopeo pigz

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: DSO Login
        run: |
          skopeo login registry1.dso.mil \
            -u ${{ secrets.REGISTRY_USER }} \
            -p ${{ secrets.REGISTRY_TOKEN }}

      - name: Run Skopeo Sync
        run: |
          skopeo sync \
            --src yaml --dest dir \
            ${{ vars.COLLECTOR }}.yml \
            ${{ vars.COLLECTOR }}

      - name: TARchive Skopeo Sync
        run: |
          tar -cv -Ipigz --remove-files \
            -f ${{ vars.COLLECTOR }}-skopeo-${{ needs.Date.outputs.Date }}.tgz \
            ${{ vars.COLLECTOR }} && \
          echo -e "\nCreating Hash" &&\
          sha256sum ${{ vars.COLLECTOR }}-skopeo-${{ needs.Date.outputs.Date }}.tgz \
          | tee ${{ vars.COLLECTOR }}-skopeo-${{ needs.Date.outputs.Date }}.tgz.sha &&\
          echo -e "\nListing Files" &&\
          ls -Alh ${{ vars.COLLECTOR }}-skopeo-${{ needs.Date.outputs.Date }}.tgz*

      - name: Upload TARchive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-skopeo-${{ needs.Date.outputs.Date }}.tgz
          path: ${{ vars.COLLECTOR }}-skopeo-${{ needs.Date.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload TARchive Hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-skopeo-${{ needs.Date.outputs.Date }}.tgz.sha
          path: ${{ vars.COLLECTOR }}-skopeo-${{ needs.Date.outputs.Date }}.tgz.sha
          if-no-files-found: error

  VSCodeSync:
    needs: [Date]
    runs-on: ubuntu-24.04
    env:
        GH_TOKEN: ${{ github.token }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run Sync
        id: docker_run_sync
        run: |
          docker run \
            -v $PWD/artifacts:/artifacts \
            -e SYNCARGS="--frequency 0 --check-specified-extensions --update-extensions --update-binaries" \
            lolinternet/vscsync

      - name: Reset Permissions due to container as root
        run: |
          echo "Reset Permissions"
          sudo chown -R runner:docker artifacts
          echo "Directory Contents"
          ls -lah artifacts/

      - name: Create json ZIP
        run: |
          zip -jD ${{ vars.COLLECTOR }}-json-${{ needs.Date.outputs.Date }}.zip artifacts/*.json &&\
          echo -e "\nCreating Hash" &&\
          sha256sum ${{ vars.COLLECTOR }}-json-${{ needs.Date.outputs.Date }}.zip \
            | tee ${{ vars.COLLECTOR }}-json-${{ needs.Date.outputs.Date }}.zip.sha &&\
          echo -e "\nListing Files" &&\
          ls -Alht ${{ vars.COLLECTOR }}-json-${{ needs.Date.outputs.Date }}.zip*

      - name: Upload jsons
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-json-${{ needs.Date.outputs.Date }}.zip
          path: ${{ vars.COLLECTOR }}-json-${{ needs.Date.outputs.Date }}.zip

      - name: Upload jsons Hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-json-${{ needs.Date.outputs.Date }}.zip.sha
          path: ${{ vars.COLLECTOR }}-json-${{ needs.Date.outputs.Date }}.zip.sha

      - name: Extract the vsix files
        run: |
          cd artifacts
          ../extract-vsix.sh

      - name: Zip up the extracted vsix files
        run: |
          zip -m \
            ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip \
            artifacts/*.vsix \
            | tee ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip.txt && \
          echo -e "\nCreating Hash" &&\
          sha256sum ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip \
            | tee ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip.sha &&\
          echo -e "\nListing Files" &&\
          ls -Alh ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip*

      - name: TARchive VSCsync Extension Artifacts
        run: |
          tar -cv -Ipigz --remove-files \
            -f ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz \
            artifacts/extensions artifacts/*.json \
            | tee ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz.txt && \
          echo -e "\Creating Hash" &&\
          sha256sum ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz \
            | tee ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz.sha &&\
          echo -e "\nListing Files" &&\
          ls -Alh ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz*

      - name: TARchive VSCsync Installer Artifacts
        run: |
          tar -cv -Ipigz --remove-files \
            -f ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz \
            artifacts/installers \
            | tee ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz.txt && \
          echo -e "\nCreating Hash" &&\
          sha256sum ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz \
            | tee ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz.sha
          echo -e "\nListing Files" &&\
          ls -Alh ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz*

      - name: List remaining files in artifacts
        run: |
          echo "Directory Contents"
          ls -lah artifacts/

      - name: Upload extension TARchive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz
          path: ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload extension TARchive Inventory
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz.txt
          path: ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz.txt
          if-no-files-found: error

      - name: Upload extension TARchive Hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz.sha
          path: ${{ vars.COLLECTOR }}-extensions-${{ needs.Date.outputs.Date }}.tgz.sha

      - name: Upload Installers TARchive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz
          path: ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload Installers TARchive Inventory
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz.txt
          path: ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz.txt
          if-no-files-found: error

      - name: Upload Installers TARchive hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz.sha
          path: ${{ vars.COLLECTOR }}-installers-${{ needs.Date.outputs.Date }}.tgz.sha
          if-no-files-found: error

      - name: Upload VSIX ZIP
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip
          path: ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip
          if-no-files-found: error

      - name: Upload VSIX ZIP Inventory
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip.txt
          path: ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip.txt
          if-no-files-found: error

      - name: Upload VSIX ZIP Inventory
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip.sha
          path: ${{ vars.COLLECTOR }}-vsix-${{ needs.Date.outputs.Date }}.zip.sha
          if-no-files-found: error

  Code:
    needs: [Date]
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Update Submodules if needed
        shell: bash
        run: git submodule update --init --recursive --remote

      - name: Bundle Repo1 code base for ${{ vars.COLLECTOR }}
        run: |
          git bundle create --progress ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle --all &&\
          echo -e "\nCreating Hash" &&\
          sha256sum ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle \
            | tee ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle.sha &&\
          echo -e "\nListing Files" &&\
          ls -Alht *

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle
          if-no-files-found: error

      - name: Upload bundle hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle.sha
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle.sha
          if-no-files-found: error

  Release:
    runs-on: ubuntu-24.04
    needs: [Date, Code, Skopeo, VSCodeSync]
    permissions:
      contents: write
      pull-requests: read
    env:
        GH_TOKEN: ${{ github.token }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -Alh ${{ vars.COLLECTOR }}-*.*

      - name: Set up git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        id: tag_create
        with:
          tag: ${{ needs.Date.outputs.Date }}
          github_token: ${{secrets.GITHUB_TOKEN}}
          tag_exists_error: false
          message: "Release for ${{ needs.Date.outputs.Date }} run"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ vars.COLLECTOR }} ${{ needs.Date.outputs.Date }}
          tag_name: ${{ needs.Date.outputs.Date }}
          make_latest: true
          files: |
            *.bundle
            *.tgz.txt
            *.zip.txt

  Sharepoint:
    runs-on: ubuntu-24.04
    needs: [Date, Code, Skopeo, VSCodeSync]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -Alh ${{ vars.COLLECTOR }}-*.*

      - name: Send Files to Sharepoint
        uses: amentumcms/sharepoint-file-upload-action@main
        with:
          file_path: "${{ vars.COLLECTOR }}-*.*"
          host_name: "${{ secrets.SHAREPOINT_HOST }}"
          site_name: "${{ secrets.SHAREPOINT_SITE }}"
          upload_path: "${{ secrets.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/${{ needs.Date.outputs.Date }}"
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: "login.microsoftonline.us"
          graph_endpoint: "graph.microsoft.us"

  MakeISO:
    runs-on: ubuntu-24.04
    needs: [Date, Code, Skopeo, VSCodeSync]
    permissions:
      contents: write
      pull-requests: read
    env:
        GH_TOKEN: ${{ github.token }}
    steps:
      - name: Install mkisofs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mkisofs isomd5sum

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -Alh ${{ vars.COLLECTOR }}-*.*

      - name: ISO Table of contents
        run: |
          tree -a . \
            | tee ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso.txt

      - name: Upload iso ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.txt
          path: ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso.txt
          if-no-files-found: error

      - name: Make ISO
        run: |
          mkisofs -J -R -v -T -l \
            -V '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -A '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -o ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso \
            ${{ vars.COLLECTOR }}-*.*

      - name: Implant MD5 sum into iso
        run: implantisomd5 ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso

      - name: Generate Hash
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso | tee \
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -Alh *.iso*

      - name: Send ISO to Sharepoint
        uses: amentumcms/sharepoint-file-upload-action@main
        with:
          file_path: "${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso*"
          host_name: "${{ secrets.SHAREPOINT_HOST }}"
          site_name: "${{ secrets.SHAREPOINT_SITE }}"
          upload_path: "${{ secrets.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/"
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: "login.microsoftonline.us"
          graph_endpoint: "graph.microsoft.us"
